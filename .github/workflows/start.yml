# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: write
  actions: write
  issues: read
  checks: write
  pull-requests: write
  packages: write

jobs:

  current-time:
    runs-on: ubuntu-latest

    steps:
      - name: Get Current Time
        uses: josStorer/get-current-time@v2.1.2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+01:00"

      - name: Print Current Time
        run: |
          echo "Current Time: ${{ steps.current-time.outputs.formattedTime }}"
        shell: bash

  build:
    needs: [current-time]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Redis
        uses: shogo82148/actions-setup-redis@v1.33.0
        with:
          redis-version: '7'
      - run: redis-cli ping

      - name: Update package lists
        run: sudo apt-get update

      - name: Install dependencies
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

      - name: Convert secrets to environment variables
        uses: oNaiPs/secrets-to-env-action@v1.5
        id: secrets-to-env
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven
      - run: java --version

      - name: Grant execution permission to mvnw
        run: chmod +x ./mvnw
        shell: bash

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository,
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Clean with Maven
        run: ./mvnw clean

      - uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [{
              "id": "github",
              "username": "${{ secrets.USERNAME }}",
              "password": "${{ secrets.PACKAGE_GITHUB_TOKEN }}"
            }]

      - name: Install dependencies          
        run: mvn install -DskipTests

      - name: Test with Maven
        env:
          DB_NAME: test_db
          DB_USERNAME: test_user
          DB_PASSWORD: test_pass
        run: ./mvnw test

      - name: Verify with Maven
        env:
          DB_NAME: test_db
          DB_USERNAME: test_user
          DB_PASSWORD: test_pass
        run: ./mvnw verify

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && 
        github.event.action == 'closed' &&
        github.event.pull_request.merged == true && 
        github.ref == 'refs/heads/main' &&
        github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

#  action-slack:
#    runs-on: ubuntu-latest
#    if: github.event_name == 'pull_request'
#
#    steps:
#      - name: Slack Alarm
#        uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          author_name: GitHub-Actions CI/CD
#          fields: repo,message,commit,author,ref,job,took
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
#        if: always() # Pick up events even if the job fails or is canceled.
